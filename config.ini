########################################################################################################################

# This is an example config file. You can create a copy, adjust the parameters and save it in your
# working directory. Once you have installed this package, you can start a processing workflow via the command line:
# `s1_nrb -c /path/to/your/config.ini`

########################################################################################################################

[GENERAL]

# OPTIONS: all | nrb | snap
# Can be used to execute the entire processing chain or only part of it.
mode = all

# NOTE: Only one of the following parameters is required.
# NOTE: [aoi_tiles] can be used to define the area of interest via MGRS tile IDs. IDs must be provided comma-separated,
# e.g.: 32TNS, 32TMT, 32TMS
# NOTE: [aoi_geometry] defines the area of interest via a full path to a vector file supported by
# `spatialist.vector.Vector`. This option will automatically search for overlapping MGRS tiles and use these for processing.
aoi_tiles = 28RBS
aoi_geometry = None

# NOTE: Allowed date formats are %Y-%m-%d and %Y-%m-%dT%H:%M:%S
mindate = 2021-10-19
maxdate = 2021-10-21

# OPTIONS: IW | EW | SM
acq_mode = IW

# OPTIONS: GRD | SLC
product = SLC

# NOTE: [work_dir] and [scene_dir] must be full paths to existing directories
# NOTE: All parameters ending in '_dir' can either be full paths to existing directories of choice OR directory names
# that will automatically be created as subdirectories of the directory specified with [work_dir].
# NOTE: All parameters ending in '_file' can either be full paths to the existing file OR file names, which are assumed
# to be located in the directory specified with the parameter [work_dir]. The [db_file] is an exception, as it will be
# automatically generated by pyroSAR if it doesn't exist already.
work_dir = /example/project/directory
scene_dir = /example/scene/directory
rtc_dir = RTC
tmp_dir = TMP
nrb_dir = NRB
dem_dir = DEM
wbm_dir = WBM
log_dir = LOG
db_file = scenes.db
kml_file = S2A_OPER_GIP_TILPAR_MPC__20151209T095117_V20150622T000000_21000101T000000_B00.kml

# OPTIONS: Copernicus 10m EEA DEM | Copernicus 30m Global DEM II | Copernicus 30m Global DEM | GETASSE30
# NOTE: Water body masks are not available for Copernicus 30m Global DEM and GETASSE30 and will therefore not be
# included in the product data mask.
# NOTE: Copernicus 10m EEA DEM and Copernicus 30m Global DEM II (which include water body masks) are retrieved from the
# Copernicus Space Component Data Access system (CSCDA) and requires registration:
# https://spacedata.copernicus.eu/web/cscda/data-access/registration
dem_type = Copernicus 30m Global DEM II

# Temporarily changes GDAL_NUM_THREADS during processing. Will be reset after processing has finished.
gdal_threads = 4

# Extended Timing Annotation Dataset (ETAD) correction
# https://sentinel.esa.int/web/sentinel/missions/sentinel-1/data-products/etad-dataset
# If [etad] is True, [etad_dir] is searched for ETAD products matching the respective input SLC
# and a new SLC is created in [tmp_dir], which is then used for all other processing steps.
# If [etad] is False, [etad_dir] will be ignored.
etad = False
etad_dir = /example/etad/directory
